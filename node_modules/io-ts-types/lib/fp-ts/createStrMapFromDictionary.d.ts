import { StrMap } from 'fp-ts/lib/StrMap';
import * as t from 'io-ts';
export declare class StrMapType<C extends t.Any, A = any, O = A, I = t.mixed> extends t.Type<A, O, I> {
    readonly type: C;
    readonly _tag: 'StrMapType';
    constructor(name: string, is: StrMapType<C, A, O, I>['is'], validate: StrMapType<C, A, O, I>['validate'], serialize: StrMapType<C, A, O, I>['encode'], type: C);
}
export interface StrMapC<C extends t.Mixed> extends StrMapType<C, StrMap<t.TypeOf<C>>, Record<string, t.OutputOf<C>>, t.mixed> {
}
export declare const createStrMapFromDictionary: <C extends t.Mixed>(codec: C, name?: string) => StrMapC<C>;
