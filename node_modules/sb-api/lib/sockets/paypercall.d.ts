import * as t from 'io-ts';
import WebSocket from 'ws';
import { AtleastUUID, SbWebSocket } from './common';
export declare abstract class PayPerCallSocket extends SbWebSocket {
    protected sendRequest: (request: object, type: t.Type<any, any, unknown>, requestType?: string | undefined) => Promise<any>;
    protected handleMessage: (uuid: string, parsed: AtleastUUID, data: WebSocket.Data) => Promise<void>;
    protected pendingRequests: {
        [uuid: string]: PendingRequest | undefined;
    };
    private getDataType;
}
interface PendingRequest {
    resolve: (data: any[]) => void;
    reject: (err: any) => any;
    type: t.Type<any>;
}
export {};
